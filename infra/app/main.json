{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "14863555571129338485"
    }
  },
  "parameters": {
    "customerName": {
      "type": "string"
    },
    "region": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "secureString"
    },
    "vmAdminPassword": {
      "type": "secureString"
    },
    "vmTimeZone": {
      "type": "string"
    },
    "sharedImageGalleryName": {
      "type": "string"
    },
    "demoApplicationImageDefinitionName": {
      "type": "string"
    },
    "demoApplicationImageVersion": {
      "type": "string"
    },
    "centralStorageAccountName": {
      "type": "string"
    },
    "imageScriptsContainerName": {
      "type": "string"
    },
    "centralResourceGroupName": {
      "type": "string"
    }
  },
  "functions": [],
  "variables": {
    "longName": "[format('{0}-{1}-{2}', parameters('customerName'), parameters('region'), parameters('environment'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vNetDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "longName": {
            "value": "[variables('longName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "17955309463854209960"
            }
          },
          "parameters": {
            "longName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "azureBastionSubnetAddressPrefix": "10.0.1.0/27",
            "azureBastionSubnetName": "AzureBastionSubnet",
            "appSubnetAddressPrefix": "10.0.2.0/24",
            "appSubnetName": "app"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "[format('vnet-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('azureBastionSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('azureBastionSubnetAddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-bastion-{0}', parameters('longName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('appSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('appSubnetAddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-app-{0}', parameters('longName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-app-{0}', parameters('longName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-bastion-{0}', parameters('longName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('nsg-app-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowFrontDoorInbound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow FrontDoor inbound",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "priority": 100,
                      "sourceAddressPrefix": "Internet",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "[variables('appSubnetAddressPrefix')]",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ]
                    }
                  },
                  {
                    "name": "AllowBastionInbound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow from Bastion subnet",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "priority": 150,
                      "sourceAddressPrefix": "[variables('azureBastionSubnetAddressPrefix')]",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "[variables('appSubnetAddressPrefix')]",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('nsg-bastion-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowHttpsInbound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow from Internet Inbound",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "priority": 120,
                      "sourceAddressPrefix": "Internet",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "AllowGatewayManagerInbound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow GatewayManager Inbound",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "priority": 130,
                      "sourceAddressPrefix": "GatewayManager",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "AllowAzureLoadBalancerInbound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow LoadBalancer Inbound",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "priority": 140,
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "AllowBastionHostCommunication",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow Bastion Host Communication Inbound",
                      "direction": "Inbound",
                      "protocol": "*",
                      "priority": 150,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ]
                    }
                  },
                  {
                    "name": "AllowSshRdpOutbound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow Ssh Rdp Outbound",
                      "direction": "Outbound",
                      "protocol": "*",
                      "priority": 100,
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ]
                    }
                  },
                  {
                    "name": "AllowAzureCloudOutbound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow Azure Cloud Outbound",
                      "direction": "Outbound",
                      "protocol": "Tcp",
                      "priority": 110,
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "AzureCloud",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "AllowBastionommunication",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow Bastion Communication Outbound",
                      "direction": "Outbound",
                      "protocol": "*",
                      "priority": 120,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ]
                    }
                  },
                  {
                    "name": "AllowGetSessionInformation",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow Get Session",
                      "direction": "Outbound",
                      "protocol": "*",
                      "priority": 130,
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vNetName": {
              "type": "string",
              "value": "[format('vnet-{0}', parameters('longName'))]"
            },
            "applicationSubnetName": {
              "type": "string",
              "value": "[variables('appSubnetName')]"
            },
            "bastionSubnetName": {
              "type": "string",
              "value": "[variables('azureBastionSubnetName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "bastionDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vNetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vNetDeploy'), '2019-10-01').outputs.vNetName.value]"
          },
          "bastionSubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vNetDeploy'), '2019-10-01').outputs.bastionSubnetName.value]"
          },
          "longName": {
            "value": "[variables('longName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "17500152497861716953"
            }
          },
          "parameters": {
            "longName": {
              "type": "string"
            },
            "vNetName": {
              "type": "string"
            },
            "bastionSubnetName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "fullyQualifiedBastionSubnetName": "[format('{0}/{1}', parameters('vNetName'), parameters('bastionSubnetName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-02-01",
              "name": "[format('pip-bastion-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2021-02-01",
              "name": "[format('bastion-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "bastion",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-bastion-{0}', parameters('longName')))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(variables('fullyQualifiedBastionSubnetName'), '/')[0], split(variables('fullyQualifiedBastionSubnetName'), '/')[1])]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-bastion-{0}', parameters('longName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vmDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminPassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('vmAdminUsername')]"
          },
          "vNetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vNetDeploy'), '2019-10-01').outputs.vNetName.value]"
          },
          "applicationSubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vNetDeploy'), '2019-10-01').outputs.applicationSubnetName.value]"
          },
          "longName": {
            "value": "[variables('longName')]"
          },
          "customerName": {
            "value": "[parameters('customerName')]"
          },
          "timeZone": {
            "value": "[parameters('vmTimeZone')]"
          },
          "sharedImageGalleryName": {
            "value": "[parameters('sharedImageGalleryName')]"
          },
          "demoApplicationImageDefinitionName": {
            "value": "[parameters('demoApplicationImageDefinitionName')]"
          },
          "demoApplicationImageVersion": {
            "value": "[parameters('demoApplicationImageVersion')]"
          },
          "loadBalancerName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loadBalancerDeploy'), '2019-10-01').outputs.loadBalancerName.value]"
          },
          "loadBalancerBackendAddressPoolName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loadBalancerDeploy'), '2019-10-01').outputs.loadBalancerBackendAddressPoolName.value]"
          },
          "centralStorageAccountName": {
            "value": "[parameters('centralStorageAccountName')]"
          },
          "imageScriptsContainerName": {
            "value": "[parameters('imageScriptsContainerName')]"
          },
          "centralResourceGroupName": {
            "value": "[parameters('centralResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "6378290820448009913"
            }
          },
          "parameters": {
            "longName": {
              "type": "string"
            },
            "customerName": {
              "type": "string"
            },
            "vNetName": {
              "type": "string"
            },
            "applicationSubnetName": {
              "type": "string"
            },
            "adminUsername": {
              "type": "secureString"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "timeZone": {
              "type": "string"
            },
            "sharedImageGalleryName": {
              "type": "string"
            },
            "demoApplicationImageDefinitionName": {
              "type": "string"
            },
            "demoApplicationImageVersion": {
              "type": "string"
            },
            "loadBalancerName": {
              "type": "string"
            },
            "loadBalancerBackendAddressPoolName": {
              "type": "string"
            },
            "centralStorageAccountName": {
              "type": "string"
            },
            "imageScriptsContainerName": {
              "type": "string"
            },
            "centralResourceGroupName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "fullyQualifiedApplicationSubnetName": "[format('{0}/{1}', parameters('vNetName'), parameters('applicationSubnetName'))]",
            "configureWebsiteFilename": "customizeVM.ps1"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-02-01",
              "name": "[format('nic-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipConfig",
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(variables('fullyQualifiedApplicationSubnetName'), '/')[0], split(variables('fullyQualifiedApplicationSubnetName'), '/')[1])]"
                      },
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', split(format('{0}/{1}', parameters('loadBalancerName'), parameters('loadBalancerBackendAddressPoolName')), '/')[0], split(format('{0}/{1}', parameters('loadBalancerName'), parameters('loadBalancerBackendAddressPoolName')), '/')[1])]"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('mi-vm-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]"
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-03-01",
              "name": "[format('vm-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-vm-{0}', parameters('longName')))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B2ms"
                },
                "osProfile": {
                  "computerName": "[format('vm{0}', parameters('customerName'))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "windowsConfiguration": {
                    "timeZone": "[parameters('timeZone')]",
                    "enableAutomaticUpdates": true,
                    "provisionVMAgent": true
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "id": "[resourceId('Microsoft.Compute/galleries/images/versions', split(format('{0}/{1}/{2}', parameters('sharedImageGalleryName'), parameters('demoApplicationImageDefinitionName'), parameters('demoApplicationImageVersion')), '/')[0], split(format('{0}/{1}/{2}', parameters('sharedImageGalleryName'), parameters('demoApplicationImageDefinitionName'), parameters('demoApplicationImageVersion')), '/')[1], split(format('{0}/{1}/{2}', parameters('sharedImageGalleryName'), parameters('demoApplicationImageDefinitionName'), parameters('demoApplicationImageVersion')), '/')[2])]"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "os",
                    "createOption": "FromImage"
                  },
                  "dataDisks": [
                    {
                      "lun": 0,
                      "name": "data",
                      "createOption": "Empty",
                      "diskSizeGB": 10
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', parameters('longName')))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                },
                "userData": "[base64(parameters('customerName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', parameters('longName')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-vm-{0}', parameters('longName')))]"
              ]
            },
            {
              "type": "Microsoft.DevTestLab/schedules",
              "apiVersion": "2018-09-15",
              "name": "[format('shutdown-computevm-{0}', format('vm-{0}', parameters('longName')))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                  "time": "1700"
                },
                "timeZoneId": "[parameters('timeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}', parameters('longName')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}', parameters('longName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/configureWebApp', format('vm-{0}', parameters('longName')))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                  "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -File {0} -PathToWebSite C:\\WebSites\\ApplicationWebSite\\index.html', variables('configureWebsiteFilename'))]",
                  "managedIdentity": {
                    "clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-vm-{0}', parameters('longName')))).clientId]"
                  },
                  "fileUris": [
                    "[format('https://{0}.blob.{1}/{2}/{3}', parameters('centralStorageAccountName'), environment().suffixes.storage, parameters('imageScriptsContainerName'), variables('configureWebsiteFilename'))]"
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('centralResourceGroupName')), 'Microsoft.Resources/deployments', 'assignStorageBlobDataReaderDeploy')]",
                "[resourceId('Microsoft.Compute/virtualMachines', format('vm-{0}', parameters('longName')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-vm-{0}', parameters('longName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "assignStorageBlobDataReaderDeploy",
              "resourceGroup": "[parameters('centralResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "centralStorageAccountName": {
                    "value": "[parameters('centralStorageAccountName')]"
                  },
                  "vmUserAssignedIdentityName": {
                    "value": "[format('mi-vm-{0}', parameters('longName'))]"
                  },
                  "targetResourceGroupName": {
                    "value": "[resourceGroup().name]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.63.48766",
                      "templateHash": "7874877085459824967"
                    }
                  },
                  "parameters": {
                    "centralStorageAccountName": {
                      "type": "string"
                    },
                    "vmUserAssignedIdentityName": {
                      "type": "string"
                    },
                    "targetResourceGroupName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageBlobDataReaderRoleDefinition": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/2a2b9908-6ea1-4ae2-8e65-a410df84e7d1', subscription().subscriptionId)]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2021-04-01-preview",
                      "name": "[guid(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('targetResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('vmUserAssignedIdentityName')), parameters('targetResourceGroupName'), variables('storageBlobDataReaderRoleDefinition'))]",
                      "properties": {
                        "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('targetResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('vmUserAssignedIdentityName')), '2018-11-30').principalId]",
                        "roleDefinitionId": "[variables('storageBlobDataReaderRoleDefinition')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-vm-{0}', parameters('longName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'loadBalancerDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'vNetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "loadBalancerDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationSubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vNetDeploy'), '2019-10-01').outputs.applicationSubnetName.value]"
          },
          "longName": {
            "value": "[variables('longName')]"
          },
          "vNetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vNetDeploy'), '2019-10-01').outputs.vNetName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "8320397242381429842"
            }
          },
          "parameters": {
            "longName": {
              "type": "string"
            },
            "vNetName": {
              "type": "string"
            },
            "applicationSubnetName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "loadBalancerName": "[format('lb-{0}', parameters('longName'))]",
            "loadBalancerFrontEndName": "LoadBalancerFrontEnd",
            "loadBalancerBackEndName": "LoadBalancerBackEnd",
            "loadBalancerProbeName": "LoadBalancerProbe"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-02-01",
              "name": "[format('pip-lb-{0}', parameters('longName'))]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2021-02-01",
              "name": "[variables('loadBalancerName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "[variables('loadBalancerFrontEndName')]",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-lb-{0}', parameters('longName')))]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "[variables('loadBalancerBackEndName')]"
                  }
                ],
                "loadBalancingRules": [
                  {
                    "name": "HTTPrule",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('loadBalancerBackEndName'))]"
                      },
                      "protocol": "Tcp",
                      "loadDistribution": "Default",
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), variables('loadBalancerProbeName'))]"
                      },
                      "frontendPort": 80,
                      "backendPort": 80,
                      "disableOutboundSnat": true,
                      "enableFloatingIP": false,
                      "enableTcpReset": true
                    }
                  },
                  {
                    "name": "HTTPSrule",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('loadBalancerBackEndName'))]"
                      },
                      "protocol": "Tcp",
                      "loadDistribution": "Default",
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), variables('loadBalancerProbeName'))]"
                      },
                      "frontendPort": 443,
                      "backendPort": 443,
                      "disableOutboundSnat": true,
                      "enableFloatingIP": false,
                      "enableTcpReset": true
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "[variables('loadBalancerProbeName')]",
                    "properties": {
                      "protocol": "Tcp",
                      "port": 80,
                      "intervalInSeconds": 5,
                      "numberOfProbes": 2
                    }
                  }
                ],
                "outboundRules": [
                  {
                    "name": "loadBalancerOutboundRule",
                    "properties": {
                      "allocatedOutboundPorts": 10000,
                      "protocol": "All",
                      "enableTcpReset": false,
                      "idleTimeoutInMinutes": 15,
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('loadBalancerBackEndName'))]"
                      },
                      "frontendIPConfigurations": [
                        {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-lb-{0}', parameters('longName')))]"
              ]
            }
          ],
          "outputs": {
            "loadBalancerName": {
              "type": "string",
              "value": "[variables('loadBalancerName')]"
            },
            "loadBalancerPublicIpAddressName": {
              "type": "string",
              "value": "[format('pip-lb-{0}', parameters('longName'))]"
            },
            "loadBalancerBackendAddressPoolName": {
              "type": "string",
              "value": "[variables('loadBalancerBackEndName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "frontDoorModule",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "loadBalancerPublicIpAddressName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loadBalancerDeploy'), '2019-10-01').outputs.loadBalancerPublicIpAddressName.value]"
          },
          "longName": {
            "value": "[variables('longName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "575911359956219633"
            }
          },
          "parameters": {
            "longName": {
              "type": "string"
            },
            "loadBalancerPublicIpAddressName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "frontDoorName": "[format('fd-{0}', parameters('longName'))]",
            "frontDoorFrontEndName": "FrontDoorFrontEnd",
            "frontDoorBackEndName": "FrontDoorBackEnd",
            "frontDoorHealthProbeSettingsName": "FrontDoorHealthProbeSettings",
            "frontDoorLoadBalancingSettingsName": "FrontDoorLoadBalancingSettings"
          },
          "resources": [
            {
              "type": "Microsoft.Network/frontDoors",
              "apiVersion": "2020-05-01",
              "name": "[variables('frontDoorName')]",
              "location": "global",
              "properties": {
                "enabledState": "Enabled",
                "frontendEndpoints": [
                  {
                    "name": "[variables('frontDoorFrontEndName')]",
                    "properties": {
                      "hostName": "[format('{0}.azurefd.net', variables('frontDoorName'))]",
                      "sessionAffinityEnabledState": "Disabled",
                      "webApplicationFirewallPolicyLink": {
                        "id": "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', 'frontDoorWafPolicy')]"
                      }
                    }
                  }
                ],
                "backendPools": [
                  {
                    "name": "[variables('frontDoorBackEndName')]",
                    "properties": {
                      "backends": [
                        {
                          "address": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('loadBalancerPublicIpAddressName')), '2021-02-01').ipAddress]",
                          "backendHostHeader": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('loadBalancerPublicIpAddressName')), '2021-02-01').ipAddress]",
                          "httpPort": 80,
                          "httpsPort": 443,
                          "weight": 100,
                          "priority": 1,
                          "enabledState": "Enabled"
                        }
                      ],
                      "loadBalancingSettings": {
                        "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('frontDoorName'), variables('frontDoorLoadBalancingSettingsName'))]"
                      },
                      "healthProbeSettings": {
                        "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('frontDoorName'), variables('frontDoorHealthProbeSettingsName'))]"
                      }
                    }
                  }
                ],
                "healthProbeSettings": [
                  {
                    "name": "[variables('frontDoorHealthProbeSettingsName')]",
                    "properties": {
                      "enabledState": "Enabled",
                      "path": "/",
                      "protocol": "Http",
                      "intervalInSeconds": 120
                    }
                  }
                ],
                "loadBalancingSettings": [
                  {
                    "name": "[variables('frontDoorLoadBalancingSettingsName')]",
                    "properties": {
                      "sampleSize": 4,
                      "successfulSamplesRequired": 2
                    }
                  }
                ],
                "routingRules": [
                  {
                    "name": "routingRule1",
                    "properties": {
                      "acceptedProtocols": [
                        "Http",
                        "Https"
                      ],
                      "enabledState": "Enabled",
                      "frontendEndpoints": [
                        {
                          "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('frontDoorName'), variables('frontDoorFrontEndName'))]"
                        }
                      ],
                      "patternsToMatch": [
                        "/*"
                      ],
                      "routeConfiguration": {
                        "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                        "forwardingProtocol": "MatchRequest",
                        "backendPool": {
                          "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', variables('frontDoorName'), variables('frontDoorBackEndName'))]"
                        }
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', 'frontDoorWafPolicy')]"
              ]
            },
            {
              "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
              "apiVersion": "2020-11-01",
              "name": "frontDoorWafPolicy",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Classic_AzureFrontDoor"
              },
              "properties": {
                "policySettings": {
                  "enabledState": "Enabled",
                  "mode": "Prevention"
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "Microsoft_DefaultRuleSet",
                      "ruleSetVersion": "1.1"
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'loadBalancerDeploy')]"
      ]
    }
  ]
}